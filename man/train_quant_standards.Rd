% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_quant_standards.R,
%   R/train_quant_standards_deprecated.R
\name{train_quant_standards}
\alias{train_quant_standards}
\title{Analyze quant fluorescence data}
\usage{
train_quant_standards(
  quant_data,
  model = c("kit_reference", "linear", "power"),
  remove_standard = FALSE
)

train_quant_standards(
  quant_data,
  model = c("kit_reference", "linear", "power"),
  remove_standard = FALSE
)
}
\arguments{
\item{quant_data}{list. Output of \code{\link[=load_quant_files]{load_quant_files()}}.}

\item{model}{character string. Select the regression model to use, where \eqn{y} = DNA concentration (ng/well) and \eqn{x} = Zeroed_RFU = RFU - background RFU; background_RFU, obtained by subtracting the RFU of the zero standard against all the other standards, is done internally.

Valid options are:
\itemize{
\item "kit_reference" (\eqn{y = 0 + bx}; a linear model with zero intercept as per the instructions in the user manual. This is the default option)
\item "linear" (\eqn{y = a + bx}; a linear model with non-zero intercept)
\item "power" (\eqn{y = exp(a)*x^b}; a power model with the formula definition \eqn{log(y) = log(x)}; used when there is a need to normalize the standard concentrations)
}}

\item{remove_standard}{numeric vector. Select the standards that need to be removed to improve model fit. This is done when standards become outliers thus lowering the model's R2 value. Default is set to \code{FALSE} indicating that none of the standards will be removed.}
}
\value{
Returns a list containing the following:
\itemize{
\item \code{background_rfu}: numeric. The RFU of the zero-standard.
\item \code{standard}: data frame. Contains the standard data used in the regression.
\item \code{model_fit}: the summary of the regression model, as though running \code{summary(model)}.
\item \code{r_squared}: numeric. The R squared value of the regression model.
\item \code{plot}: ggplot visualization of the regression showing the standards (point) and the model fit (regression line).
}

Returns a list containing the following:
\itemize{
\item \code{background_rfu}: numeric. The RFU of the zero-standard.
\item \code{standard}: data frame. Contains the standard data used in the regression.
\item \code{model_fit}: the summary of the regression model, as though running \code{summary(model)}.
\item \code{r_squared}: numeric. The R squared value of the regression model.
\item \code{plot}: ggplot visualization of the regression showing the standards (point) and the model fit (regression line).
}
}
\description{
Train a regression model to predict DNA concentration (ng/well) using relative fluorescence unit (RFU) measured from the standards in the quant assay. This takes the object generated via \code{\link[=load_quant_files]{load_quant_files()}} as input.

This is Step 2 of 4 in a series of functions for analyzing fluorescent data.

Train a regression model to predict DNA concentration (ng/well) using relative fluorescence unit (RFU) measured from the standards in the quant assay. This takes the object generated via \code{\link[=load_quant_files]{load_quant_files()}} as input.

This is Step 2 of 4 in a series of functions for analyzing fluorescent data.
}
\details{
Note that when running the power model, the standards with zeroed RFUs \eqn{<= 0} are removed to make the model work.

Note that when running the power model, the standards with zeroed RFUs \eqn{<= 0} are removed to make the model work.
}
\examples{
require (tamuccGCL)

# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")

quant_data <- load_quant_files(raw_data, plate_map)

# Train using the zero-intercept model (default)
trained_model <- train_quant_standards (quant_data)

# Train using the power model
trained_model <- train_quant_standards (quant_data, model = "power")

# Train using the linear model with the 10 ng/uL standard removed
trained_model <- train_quant_standards (quant_data, model = "linear", remove_standard = 10)

require (tamuccGCL)

# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")

quant_data <- load_quant_files(raw_data, plate_map)

# Train using the zero-intercept model (default)
trained_model <- train_quant_standards (quant_data)

# Train using the power model
trained_model <- train_quant_standards (quant_data, model = "power")

# Train using the linear model with the 10 ng/uL standard removed
trained_model <- train_quant_standards (quant_data, model = "linear", remove_standard = 10)

}
\seealso{
\code{\link[=load_quant_files]{load_quant_files()}}

\code{\link[=load_quant_files]{load_quant_files()}}
}
