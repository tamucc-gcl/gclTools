view(t4)
(t4 <- export_quant_report(t3))
(t4 <- export_quant_report(t3))
load_all()
(t4 <- export_quant_report(t3))
t4
getwd()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
t4
load_all()
check()
use_mit_license()
tools::showNonASCIIfile("R/train_quant_standards.R")
?use_package
use_package("tidyverse", "janitor", "openxlsx")
use_package(package = c("tidyverse", "janitor", "openxlsx"), type = "Imports")
use_package(package = "tidyverse", type = "Imports")
use_package("tidyverse", type = "depends")
use_package ("janitor", type = "Imports")
use_package("openxlsx", type = "Depends")
ls
check ("load_quant_files")
check ()
document()
document()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
t1
document()
document()
load_all()
?load_quant_files
load_all()
document()
?load_quant_files
t1
document()
load_all()
?load_quant_files
document(_
document()
load_all()
?load_quant_files
document()
load_all()
?load_quant_files
document()
load_all()
?load_quant_files
document()
load_all()
?load_quant_files
?clean_names()
document()
load_all()
?load_quant_files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
raw_data
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL") %>% read.csv
raw_data
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL") %>% read.csv
plate_map
document()
load_all()
?load_quant_files
# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL") %>% read.csv
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL") %>% read.csv
quant_data <- load_quant_files(raw_data, plate_map)
quant_data <- load_quant_files(raw_data = raw_data,
plate_map = plate_map)
raw_data
plate_map
plate_map <- "inst/extdata/plate_map.csv"
raw_data <- "inst/extdata/raw_data.csv"
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")
quant_data <- load_quant_files(raw_data = raw_data,
plate_map = plate_map)
quant_data
load_all()
# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")
quant_data <- load_quant_files(raw_data = raw_data,
plate_map = plate_map)
document()
load_all()
?load_quant_files
check()
check()
load_all()
require (devtools)
load_all()
?rnorm
require(insect)
?learn
document()
?load_all()
load_all()
?load_quant_files
?train_quant_standards
load_all()
?train_quant_standards
document()
load_all()
?train_quant_standards
load_all()
?train_quant_standards
document()
load_all()
?train_quant_standards
#' # Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")
quant_data <- load_quant_files(raw_data, plate_map)
trained_model <- train_quant_standards (quant_data)
trained_model <- train_quant_standards (quant_data, model = "power")
log(-2)
?switch
document()
load_all()
#' # Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")
quant_data <- load_quant_files(raw_data, plate_map)
trained_model <- train_quant_standards (quant_data, model = "power")
quant_data
view(quant_data$standard)
edit(quant_data$standard)
quant_data
fix(quant_data$standard)
quant_data$standard <- edit(quant_data$standard)
quant_data
trained_model <- train_quant_standards (quant_data, model = "power")
trained_model
trained_model <- train_quant_standards (quant_data, model = "linear")
quant_data$standard <- edit(quant_data$standard)
quant_data
trained_model <- train_quant_standards (quant_data, model = "linear")
trained_model <- train_quant_standards (quant_data, model = "power")
t <- quant_data$standard
t
sum(t$rfu <0)
document()
load_all()
trained_model <- train_quant_standards (quant_data, model = "power")
quant_data <- load_quant_files(raw_data, plate_map)
trained_model <- train_quant_standards (quant_data, model = "power")
quant_data$standard <- edit(quant_data$standard)
trained_model <- train_quant_standards (quant_data, model = "power")
quant_data <- load_quant_files(raw_data, plate_map)
quant_data$standard <- edit(quant_data$standard)
quant_data$standard <- edit(quant_data$standard)
t <- quant_data$standard
trained_model <- train_quant_standards (quant_data, model = "linear")
trained_model <- train_quant_standards (quant_data, model = "kit_reference")
trained_model <- train_quant_standards (quant_data, model = "power")
quant_report <- quant_dna(trained_model)
document()
load_all()
quant_report <- quant_dna(quant_data = quant_data,
trained_model = trained_model)
quant_report
document()
load_all()
quant_report <- quant_dna(quant_data = quant_data,
trained_model = trained_model)
quant_report
export_quant_report(quant_report)
export_quant_report(quant_report)
document()
load_all()
export_quant_report(quant_report)
# Try piping
load_quant_files(raw_data, plate_map) %>%
train_quant_standards() %>%
quant_report()
# Try piping
load_quant_files(raw_data, plate_map) %>%
train_quant_standards() %>%
quant_dna()
# Try piping
load_quant_files(raw_data, plate_map) %>%
train_quant_standards()
check()
check()
?switch
?train_quant_standards
document()
load()
load_all()
check()
document()
load_all()
check()
document()
load_all()
check()
document()
load_all()
check()
document()
document()
load_all()
load_all()
?export_quant_report
document()
load_all()
?export_quant_report
quant_dna(
?quant_dna
document()
load_all()
?export_quant_report
?quant_dna
document()
load_all()
?export_quant_report
check()
document()
load_all()
check()
document()
load_all()
check()
load_all()
require (devtools)
load_all()
plate_map <- "inst/extdata/plate_map.csv"
raw_data <- "inst/extdata/raw_data.csv"
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
t2
t3
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
check()
document()
load_all()
check()
document()
load_all()
use_r("trial")
document()
load_all(
)
check()
document()
load_all()
check()
importFrom("dplyr", "mutate", "select", "rename", "filter", "left_join", "group_by", "summarize", "ungroup", "pull")
require(devtools)
document()
load_all()
install()
?tamuccGCL
?load_quant_files
?export_quant_report
use_testthat()
test_check("tamuccGCL")
use_readme_rmd()
?export_quant_report
build_readme()
require(devtools)
document()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
plate_map <- "inst/extdata/plate_map.csv"
raw_data <- "inst/extdata/raw_data.csv"
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
setwd("E:/OneDrive - Texas A&M University-Corpus Christi/Work/Research/TAMUCC-GCL/Labwork/data/quants")
ls
devtools::install_github("kllabrador/tamuccGCL")
remove.packages("tamuccGCL")
setwd("E:/OneDrive - Texas A&M University-Corpus Christi/Work/github-repos/r_packages/tamuccGCL")
document()
quant_dna
?inserImage
?insertImage
document()
load_all()
plate_map <- "inst/extdata/plate_map.csv"
raw_data <- "inst/extdata/raw_data.csv"
# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
t3
(t4 <- export_quant_report(t3))
document()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
t3$standard
document()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
document()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
document()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
t3
t3$standard
document()
load_all()
(t1 <- load_quant_files(plate_map = plate_map,
raw_data = raw_data))
(t2 <- train_quant_standards(quant_data = t1,
model = "power",
remove_standard = F))
(t3 <- quant_dna (quant_data = t1,
trained_model = t2))
(t4 <- export_quant_report(t3))
document()
load_all()
document()
require(devtools)
?use_cran_badge
include_graphics("man/figures/workflow.jpg")
In a nutshell, the quant workflow takes the file path to the quant data files (in csv format) as input, trains the regression model based on the relative fluorescence unit (RFU) of the standards, and then uses the regression model to predict the DNA concentration of the samples. The output file which contains the quant report following the Genomics Core Lab's format is then generated.
document()
load_all()
?train_quant_standards
model <- train_quant_standards (quant_data)
require (tamuccGCL)
# Import data files
raw_data <- system.file("extdata", "raw_data.csv", package = "tamuccGCL")
plate_map <- system.file("extdata", "plate_map.csv", package = "tamuccGCL")
quant_data <- load_quant_files(raw_data, plate_map)
print (quant_data)
model <- train_quant_standards (quant_data)
print (model)
model$standard
train_quant_standards
model$standard
# Remove one standard
model_with_standards_removed <-  train_quant_standards (quant_data,
model = "power",
remove_standard = 10)
# Remove three standards
model_with_standards_removed <- train_quant_standards(quant_data,
remove_standard = c(2, 8)
)
# Remove one standard
model_with_standards_removed <-  train_quant_standards (quant_data,
model = "power",
remove_standard = 2)
# Remove three standards
model_with_standards_removed <- train_quant_standards(quant_data,
remove_standard = c(2, 8)
)
# Remove one standard
model_with_standards_removed <-  train_quant_standards (quant_data,
model = "power",
remove_standard = 2)
# Remove three standards
model_with_standards_removed <- train_quant_standards(quant_data,
remove_standard = c(2, 6, 8)
)
?quant_dna
quant_report <- quant_dna(quant_data = quant_data, trained_model = trained_model)
trained_model <- train_quant_standards (quant_data)
print (trained_model)
quant_report <- quant_dna(quant_data = quant_data, trained_model = trained_model)
print(quant_report)
?quant_dna
quant_dna
?export_quant_report
export_quant_report
export_quant_report(quant_report)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
fig.width = 6,
fig.height = 4
)
options(knitr.table.format = "html")
quant_data <- load_quant_files(raw_data, plate_map)
lapply (quant_data, kable)
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
fig.width = 6,
fig.height = 4
)
options(knitr.table.format = "html")
quant_data <- load_quant_files(raw_data, plate_map)
lapply(quant_data, kbl)
library(knitr)
library(flextable)
library(knitr)
library(flextable)
quant_data <- load_quant_files(raw_data, plate_map)
lapply(quant_data, flextable)
document()
load_all()
require(knitr)
require(flextable)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
fig.width = 5,
fig.height = 3.5
)
# Set global options to render data frames with flextable
knitr::opts_chunk$set(render = function(x, ...) {
if (is.data.frame(x)) {
flextable::qflextable(x)
} else {
x
}
})
quant_data <- load_quant_files(raw_data, plate_map)
print(quant_data)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
fig.width = 5,
fig.height = 3.5
)
quant_data <- load_quant_files(raw_data, plate_map)
lapply(quant_data, head())
quant_data <- load_quant_files(raw_data, plate_map)
lapply(quant_data, head(6))
quant_data <- load_quant_files(raw_data, plate_map)
lapply(quant_data, head(.,6))
head(quant_data)
quant_data <- load_quant_files(raw_data, plate_map)
head(quant_data)
